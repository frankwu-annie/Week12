<!-- <!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quiz Pages</title>
    <style>
        .new-quiz {
            color: red;
            font-weight: bold;
        }

        .history-quiz {
            color: grey;
            font-size: 0.9em;
        }
    </style>
</head>

<body>
    <h1>Quiz Pages</h1>
    <ul id="quizList">
        
    </ul>

    <script>
        // Manually define the quiz pages following your Week*.htm pattern
        const quizPages = [
            { name: 'Week 12 - Math', path: 'Week12Math.htm' },
            { name: 'Week 12 - English', path: 'Week12English.htm' },
            { name: 'Week 13 - Math', path: 'Week13Math.htm' },
            { name: 'Week 13 - English', path: 'Week13English.htm' }
            // You can add more quizzes manually as needed
        ];

        const quizList = document.getElementById('quizList');

        // Get the base path of index.htm from window.location.pathname
        const basePath = window.location.pathname.replace('index.htm', '');

        // Debugging: Log the base path
        console.log('Base path:', basePath);

        // Loop through each quiz and check if it has history
        quizPages.forEach(quiz => {
            const fullQuizPath = basePath + quiz.path; // Construct the full path
            const historyKey = `submitHistory-${fullQuizPath}`; // Use full path for identifier

            const history = JSON.parse(localStorage.getItem(historyKey)) || [];

            const listItem = document.createElement('li');
            const link = document.createElement('a');
            link.href = quiz.path; // Corrected to use quiz.path
            link.textContent = quiz.name;

            if (history.length === 0) {
                // No history, mark as (new)
                const newLabel = document.createElement('span');
                newLabel.textContent = ' (new)';
                newLabel.classList.add('new-quiz');
                listItem.appendChild(link);
                listItem.appendChild(newLabel);
            } else {
                // History exists, display the wrong count for each submission as links
                const historyLabel = document.createElement('span');

                // Extract wrongCounts and create links for each submission
                const wrongCountsHistory = history
                    .map((entry, index) => {
                        const count = entry.wrongCount || 0;
                        return count > 0
                            ? `<span class="history-link" onclick="window.location.href='${quiz.path}?submissionIndex=${index + 1}';">Submit ${index + 1}: ${count}</span>`
                            : null;
                    })
                    .filter(Boolean) // Filter out any null entries
                    .join(' | '); // Join counts with " | "

                if (wrongCountsHistory) {
                    historyLabel.innerHTML = ` (${wrongCountsHistory})`;
                    historyLabel.classList.add('history-quiz');
                }

                listItem.appendChild(link);
                listItem.appendChild(historyLabel);
            }

            quizList.appendChild(listItem);
        });
    </script>
</body>

</html> -->

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quiz Pages</title>
    <style>
/*         .new-quiz {
            color: red;
            font-weight: bold;
        }

        .history-quiz {
            color: grey;
            font-size: 0.9em;
            margin-left: 20px; 
        }

        .history-link {
            cursor: pointer;
            color: blue;
            text-decoration: underline;
        }

        .history-text {
            color: grey; 
        }

        
        #quizList li {
            padding-bottom: 20px;
        } */
                /* Overall body styling for better readability */
                body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            margin: 20px;
            padding: 0;
            color: #333;
        }

        /* Styling for the main heading */
        h1 {
            color: #444;
            font-size: 2em;
            border-bottom: 2px solid #ccc;
            padding-bottom: 10px;
        }

        /* Styling the quiz list */
        ul#quizList {
            list-style: none;
            padding: 0;
            margin: 20px 0;
        }

        /* Styling for each quiz item */
        ul#quizList li {
            background-color: #fff;
            padding: 15px;
            margin-bottom: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            display: flex;
            justify-content: space-between;
            align-items: center;
            transition: background-color 0.3s ease;
        }

        /* Hover effect on quiz list items */
        ul#quizList li:hover {
            background-color: #f0f8ff;
        }

        /* Styling for the quiz name (link) */
        ul#quizList li a {
            text-decoration: none;
            color: #007acc;
            font-weight: bold;
            font-size: 1.1em;
        }

        /* Styling for new quiz labels */
        .new-quiz {
            color: red;
            font-weight: bold;
            margin-left: 10px;
        }

        /* Styling for submission history */
        .history-quiz {
            color: grey;
            font-size: 0.9em;
            margin-left: 20px; /* Adds space between the quiz name and the history */
        }

        /* Styling for clickable history links */
        .history-link {
            cursor: pointer;
            color: #007acc;
            text-decoration: underline;
        }

        /* Non-clickable text for all-correct submissions */
        .history-text {
            color: grey;
        }

        /* Responsive Design - make the page look good on small screens */
        @media (max-width: 600px) {
            ul#quizList li {
                flex-direction: column;
                align-items: flex-start;
            }
        }
    </style>
</head>

<body>
    <h1>Quiz Pages</h1>
    <ul id="quizList">
        <!-- List items will be populated dynamically -->
    </ul>

    <script>
        // Manually define the quiz pages following your Week*.htm pattern
        const quizPages = [
            //{ name: 'Week 12 - Math', path: 'Week12Math.htm' },
            { name: 'Week 12 - English', path: 'Week12English.htm' },
            { name: 'Week 13 - Math', path: 'Week13Math.htm' },
            { name: 'Week 13 - English', path: 'Week13English.htm' },
            { name: 'Week 14 - Math', path: 'Week14Math.htm' },
            { name: 'Week 14 - English', path: 'Week14English.htm' },
            { name: 'Week 15 - Math', path: 'Week15Math.htm' },
            { name: 'Week 15 - English', path: 'Week15English.htm' },
            { name: 'Week 16 - Verbal', path: 'Week16Verbal.htm' },
            { name: 'Week 16 - Quantitative', path: 'Week16Quantitative.htm' },
            { name: 'Week 16 - Nonverbal', path: 'Week16Nonverbal.htm' },
            { name: 'Week 17- Verbal', path: 'Week17Verbal.htm' },
            { name: 'Week 17 - Quantitative', path: 'Week17Quantitative.htm' },
            { name: 'Week 17 - Nonverbal', path: 'Week17Nonverbal.htm' },
            { name: 'Week 18 - Verbal', path: 'Week18Verbal.htm' },
            { name: 'Week 18 - Quantitative', path: 'Week18Quantitative.htm' },
            { name: 'Week 18 - Nonverbal', path: 'Week18Nonverbal.htm' },
            { name: 'Week 19 - Verbal', path: 'Week19Verbal.htm' },
            { name: 'Week 19 - Quantitative', path: 'Week19Quantitative.htm' },
            { name: 'Week 19 - Nonverbal', path: 'Week19Nonverbal.htm' },
            { name: 'Week 20 - Verbal', path: 'Week20Verbal.htm' },
            { name: 'Week 20 - Quantitative', path: 'Week20Quantitative.htm' },
            { name: 'Week 20 - Nonverbal', path: 'Week20Nonverbal.htm' },
            { name: 'Summary Camp - Math', path: 'Week21Math.htm' }

            // You can add more quizzes manually as needed
        ];

        const quizList = document.getElementById('quizList');

        // Get the base path of index.htm from window.location.pathname
        const basePath = window.location.pathname.replace('index.htm', '');

        // Loop through each quiz and check if it has history
        quizPages.forEach(quiz => {
            const fullQuizPath = basePath + quiz.path; // Construct the full path
            const historyKey = `submitHistory-${fullQuizPath}`; // Use full path for identifier

            const history = JSON.parse(localStorage.getItem(historyKey)) || [];

            const listItem = document.createElement('li');
            const link = document.createElement('a');
            link.href = quiz.path; // Corrected to use quiz.path
            link.textContent = quiz.name;

            if (history.length === 0) {
                // No history, mark as (new)
                const newLabel = document.createElement('span');
                newLabel.textContent = ' (new)';
                newLabel.classList.add('new-quiz');
                listItem.appendChild(link);
                listItem.appendChild(newLabel);
            } else {
                // History exists, display the wrong count for each submission as clickable spans
                const historyLabel = document.createElement('span');
                historyLabel.classList.add('history-quiz'); // Adds margin for spacing

                history.forEach((entry, index) => {
                    const count = entry.wrongCount || 0;

                    if (count > 0) {
                        const submissionLink = document.createElement('span');
                        submissionLink.textContent = `Submit ${index + 1}: ${count}`;
                        submissionLink.classList.add('history-link');
                        submissionLink.addEventListener('click', function () {
                            // Redirect to the quiz page with the correct submission index
                            window.location.href = `${quiz.path}?submissionIndex=${index + 1}`;
                        });
                        historyLabel.appendChild(submissionLink);
                    } else {
                        // If all correct, display as plain grey text, not a link
                        const submissionText = document.createElement('span');
                        submissionText.textContent = `Submit ${index + 1}: ${count}`;
                        submissionText.classList.add('history-text');
                        historyLabel.appendChild(submissionText);
                    }

                    // Add separator if not the last submission
                    if (index < history.length - 1) {
                        const separator = document.createTextNode(' | ');
                        historyLabel.appendChild(separator);
                    }
                });

                listItem.appendChild(link);
                listItem.appendChild(historyLabel);
            }

            quizList.appendChild(listItem);
        });
    </script>
</body>

</html>
